<launch>

  <!-- these are the arguments you can pass this launch file, for example paused:=true -->
  <arg name="paused" default="false"/>
  <arg name="use_sim_time" default="true"/>
  <arg name="gui" default="true"/>
  <arg name="headless" default="false"/>
  <arg name="debug" default="false"/>
  <arg name="model" default="$(find pioneer_description)/urdf/pioneer3dx.xacro"/>

  <!-- We resume the logic in empty_world.launch, changing only the name of the world to be launched -->
  <include file="$(find gazebo_ros)/launch/empty_world.launch">
    <arg name="world_name" default="$(find lar_gazebo)src/worlds/lar.world" doc="Default world"/>
    <arg name="debug" value="$(arg debug)" />
    <arg name="gui" value="$(arg gui)" />
    <arg name="paused" value="$(arg paused)"/>
    <arg name="use_sim_time" value="$(arg use_sim_time)"/>
    <arg name="headless" value="$(arg headless)"/>
  </include>

  <!-- Show in Rviz   -->
  <node name="rviz" pkg="rviz" type="rviz" args="-d $(find pioneer_ufba)/etc/pioneer.rviz"/>

  <node pkg="tf" type="static_transform_publisher" name="map_broadcaster" args="0 0 0 0 0 0 1 map odom 10" />

  <arg name="map_file" default="$(find pioneer_ufba)/maps/map_01v3.yaml"/> 
  <node name="map_server" pkg="map_server" type="map_server" args="$(arg map_file)" />

  <!-- Load the URDF into the ROS Parameter Server -->
  <param name="robot_description" command="$(find xacro)/xacro --inorder $(arg model)"/>
    
  <!-- Run a python script to the send a service call to gazebo_ros to spawn a URDF robot -->
  <node name="urdf_spawner" pkg="gazebo_ros" type="spawn_model" respawn="false" output="screen"
	args="-x 0.6 -y -3.5 -z 0.02 -Y 3.1415 -urdf -model pioneer -param robot_description"/>

  <!-- send fake joint values -->
  <!-- <node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher" ></node> -->
  <!-- <node name="robot_state_publisher" pkg="robot_state_publisher" type="state_publisher" /> -->
  <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher"
    respawn="false" output="screen">
    <remap from="/joint_states" to="/pioneer/joint_states" />
  </node>

  <rosparam file="$(find pioneer_ufba)/config/pioneer_control.yaml" command="load"/>

  <node name="controller_spawner" pkg="controller_manager" type="spawner" respawn="false"
        output="screen" ns="/" args="joint1_position_controller joint2_position_controller joint_state_controller"/>


</launch>
